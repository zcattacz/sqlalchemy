[build-system]
    build-backend = "setuptools.build_meta"
    requires = [
        "setuptools>=47",
        "wheel>=0.34",
        "cython>=0.29.24; python_implementation == 'CPython'", # Skip cython when using pypy
    ]

[tool.black]
line-length = 79
target-version = ['py37']

[tool.zimports]
black-line-length = 79

[tool.slotscheck]
exclude-modules = '^sqlalchemy\.testing'


[tool.pytest.ini_options]
addopts = "--tb native -v -r sfxX --maxfail=250 -p warnings -p logging --strict-markers"
norecursedirs = "examples build doc lib"
python_files = "test_*.py"
minversion = "6.2"
filterwarnings = [
    # NOTE: additional SQLAlchemy specific filters in
    # sqlalchemy/testing/warnings.py.   SQLAlchemy modules cannot be named
    # here as pytest loads them immediately, which breaks coverage as well
    # as sys.path adjustments in conftest.py
    "error::DeprecationWarning:test",
    "error::DeprecationWarning:sqlalchemy"
]
markers = [
    "memory_intensive: memory / CPU intensive suite tests",
    "mypy: mypy integration / plugin tests",
    "timing_intensive: time-oriented tests that are sensitive to race conditions",
    "backend: tests that should run on all backends; typically dialect-sensitive",
    "sparse_backend: tests that should run on multiple backends, not necessarily all",
]

[tool.pyright]

reportPrivateUsage = "none"
reportUnusedClass = "none"
reportUnusedFunction = "none"
reportTypedDictNotRequiredAccess = "warning"

[tool.mypy]
mypy_path = "./lib/"
show_error_codes = true
incremental = true


[[tool.mypy.overrides]]

module = [
    "sqlalchemy.*"
]

warn_unused_ignores = false
strict = true


